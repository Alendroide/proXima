generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  bio String @db.VarChar(255) @default("Nuevo aqu√≠!")
  img String @db.VarChar(255)
  username String @db.VarChar(40)
  email String @db.VarChar(100)
  tel String?
  created_at DateTime @default(now())
  posts Post[]
  notis Noti[]
  likes Like[]
  comments Comment[]
}

model Post {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  content String @db.VarChar(255)
  img String @db.VarChar(255)
  authorId Int
  author User @relation(fields: [authorId],references: [id])
  likes Like[]
  comments Comment[]
}

model Noti {
  id Int @id @default(autoincrement())
  title String @db.VarChar(100)
  description String? @db.Text
  created_at DateTime @default(now())
  read Boolean @default(false)
  link String @db.VarChar(255)
  userId Int
  user User @relation(fields: [userId],references: [id])
}

model Like {
  id Int @id @default(autoincrement())
  userId Int 
  user User @relation(fields: [userId],references: [id])
  postId Int 
  post Post @relation(fields: [postId],references: [id])
  created_at DateTime @default(now())
  @@index([postId])
  @@index([userId])
  @@unique([postId, userId])
}

model Comment {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId],references: [id])
  postId Int
  post Post @relation(fields: [postId],references: [id])
  comment String @db.VarChar(255)
  created_at DateTime @default(now())
  parentId Int?
  parent Comment? @relation("CommentToReplies",fields: [parentId],references: [id])
  replies Comment[] @relation("CommentToReplies")
}
//@@index([postId])